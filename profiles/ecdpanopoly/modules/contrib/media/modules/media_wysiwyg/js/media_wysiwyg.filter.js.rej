***************
*** 44,49 ****
            if (!media && media_definition.fid) {
              Drupal.media.filter.ensureSourceMap();
              var source = Drupal.settings.mediaSourceMap[media_definition.fid];
              media = document.createElement(source.tagName);
              media.src = source.src;
              media.innerHTML = source.innerHTML;
--- 44,55 ----
            if (!media && media_definition.fid) {
              Drupal.media.filter.ensureSourceMap();
              var source = Drupal.settings.mediaSourceMap[media_definition.fid];
+ 
+             // Skip unknown items.
+             if (!source) {
+               continue;
+             }
+ 
              media = document.createElement(source.tagName);
              media.src = source.src;
              media.innerHTML = source.innerHTML;
***************
*** 70,78 ****
      replacePlaceholderWithToken: function(content) {
        Drupal.media.filter.ensure_tagmap();
  
-       // Rewrite the tagmap in case any of the macros have changed.
-       Drupal.settings.tagmap = {};
- 
        // Replace all media placeholders with their JSON macro representations.
        //
        // There are issues with using jQuery to parse the WYSIWYG content (see
--- 76,81 ----
      replacePlaceholderWithToken: function(content) {
        Drupal.media.filter.ensure_tagmap();
  
        // Replace all media placeholders with their JSON macro representations.
        //
        // There are issues with using jQuery to parse the WYSIWYG content (see
***************
*** 95,100 ****
        // \S\s catches any character, including a linebreak; JavaScript does not
        // have a dotall flag.
        regex += '|<span[^>]+' + classRegex + '[^>]*?>[\\S\\s]+?</span>';
        var matches = content.match(RegExp(regex, 'gi'));
        if (matches) {
          for (i = 0; i < matches.length; i++) {
--- 98,104 ----
        // \S\s catches any character, including a linebreak; JavaScript does not
        // have a dotall flag.
        regex += '|<span[^>]+' + classRegex + '[^>]*?>[\\S\\s]+?</span>';
+ 
        var matches = content.match(RegExp(regex, 'gi'));
        if (matches) {
          for (i = 0; i < matches.length; i++) {
