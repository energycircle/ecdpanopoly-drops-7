<?php
/**
 * @file
 * Install, update and uninstall functions for the ECDpanopoly installation profile.
 */


/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */


function ecdpanopoly_install() {
  // Disable user registrations by default.
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

  // Create a new AT sub-theme.
  $theme_name = _ecdpanopoly_profile_site_name();
  if (!_ecdpanopoly_create_subtheme($theme_name)) {
    drupal_set_message(st('A custom sub-theme could not be created. Please run the following drush command to do so:<br />%drush', array('%drush' => 'drush adaptivetheme "AT EC-Demo" at_ecdemo ' . $theme_name)), 'error');
    // Fall back to AT if something went wrong while creating the subtheme.
    $theme_name = 'seven';
  }

  // Enable our sub-theme and set as the default site theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $theme_name)
    ->execute();
  variable_set('theme_default', $theme_name);

  // Set Seven as the site admin theme.
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
}

/**
 * Implements hook_requirements().
 *
 * The install profile's hook_requirements is not actually called, so we're
 * going to pretend to filter module instead as it doesn't make use of
 * hook_requirements.
 */
function filter_requirements($phase) {
  $requirements = array();
  // Installer requirements.
  if ($phase == 'install') {
    // We need to be able to create the AT sub-theme, so check folder
    // permissions are sufficient.
    $theme_name = ec_foundation_theme;
    $theme_path = DRUPAL_ROOT . base_path() . 'sites/all/themes/' . $theme_name;

    // Check that we have write access to the sub-theme directory.
    if ((!is_dir($theme_path) || !is_writable($theme_path)) && !@mkdir($theme_path, 0775)) {
      $requirements['subtheme'] = array(
        'title' => st('Sub-theme path'),
        'value' => st('Drupal cannot create the sub-theme directory.'),
        'description' => st('The ECDpanopoly Drupal install profile requires write access to the following location so that it can create a new AT sub-theme during the installation process. Please ensure this folder exists and is writable by the web user before continuing:<br />!theme_path', array('!theme_path' => $theme_path)),
        'severity' => REQUIREMENT_ERROR,
        'weight' => 10,
      );
    }
  }

  return $requirements;
}

/**
 * Helper function to create a new subtheme for the site, based on AT.
 */
function _ecdpanopoly_create_subtheme($theme_name) {
  // Work out where the AT SUBTHEME folder is.
  $source = drupal_get_path('theme', 'SUBTHEME');
  // This is where we're going to create our new sub-theme.
  $destination = 'sites/all/themes/' . $theme_name;

  if (empty($theme_name) || empty($source) || empty($destination) || $source == $destination) {
    // We couldn't work out where to put the new theme, so abort.
    return FALSE;
  }

  // Convert to absolute paths.
  if ($source[0] != '/') {
    $source = DRUPAL_ROOT . base_path() . $source;
  }
  if ($destination[0] != '/') {
    $destination = DRUPAL_ROOT . base_path() . $destination;
  }

  // Copy AT SUBTHEME into our new theme folder.
  if (!_ecdpanopoly_recurse_copy($source, $destination)) {
    return FALSE;
  }

  // Rename a few default files.
  $rename = array(
    'SUBTHEME.info' => "{$theme_name}.info",
    'styles/SUBTHEME.scss' => "styles/{$theme_name}.scss",
    'scripts/SUBTHEME.js' => "scripts/{$theme_name}.js",
    'images/SUBTHEME.png' => "images/{$theme_name}.png",
  );
  foreach ($rename as $src => $dst) {
    @rename($destination . '/' . $src, $destination . '/' . $dst);
  }

  // We need to update some of the default theme files to match our new theme
  // name.
  _ecdpanopoly_file_str_replace("$destination/$theme_name.info", ', <strong>you shouldn\'t enable this starterkit</strong>. instead, use <em>drush sns</em> or manually copy it to create a new sub-theme, check out the <a href="http://www.linnovate.net/blog/sasson-smart-drupal-theming">docs</a> or the README.txt for more info', "");
  _ecdpanopoly_file_str_replace("$destination/$theme_name.info", 'SUBTHEME', $theme_name);
  _ecdpanopoly_file_str_replace("$destination/$theme_name.info", 'Starterkit', ucfirst($theme_name));
  _ecdpanopoly_file_str_replace("$destination/template.php", 'SUBTHEME', $theme_name);

  // Refresh the theme list to include our new subtheme.
  system_rebuild_theme_data();
  return TRUE;
}

/**
 * Helper function to recursively copy a folder. Taken from http://php.net/copy
 */
function _ecdpanopoly_recurse_copy($src, $dst) {
  // Create the destination folder.
  if ((!is_dir($dst) || !is_writable($dst)) && !@mkdir($dst, 0775)) {
    drupal_set_message(st('Could not create directory %dir', array('%dir' => $dst)), 'error');
    return FALSE;
  }

  // Get a list of files and folders.
  $files = array_diff(scandir($src), array('..', '.', '.git', '.svn'));
  // Run through all files in the directory.
  foreach ($files as $file) {
    // If it's another directory, recursively copy it, otherwise copy the file.
    if (is_dir($src . '/' . $file)) {
      if (!_ecdpanopoly_recurse_copy($src . '/' . $file, $dst . '/' . $file)) {
        return FALSE;
      }
    }
    else {
      if (!@copy($src . '/' . $file, $dst . '/' . $file)) {
        drupal_set_message(st('Could not copy %file from %src to %dst', array('%file' => $file, '%src' => $src, '%dst' => $dst)), 'error');
        return FALSE;
      }
    }
  }

  return TRUE;
}


/**
 * Internal helper: Replace strings in a file. Taken from AT theme.
 */
function _ecdpanopoly_file_str_replace($file_path, $find, $replace) {
  $file_contents = file_get_contents($file_path);
  $file_contents = str_replace($find, $replace, $file_contents);
  file_put_contents($file_path, $file_contents);
}

/**
 * Internal helper: Append string to a file.
 */
function _ecdpanopoly_file_str_append($file_path, $string) {
  $file_contents = file_get_contents($file_path);
  $file_contents .= PHP_EOL . $string;
  file_put_contents($file_path, $file_contents);
}

/**
 * Implements hook_update_N().
 */
function ecdpanopoly_update_7100(&$sandbox) {
  // Enable the core contextual links module.
  module_enable(array('contextual'));
}
